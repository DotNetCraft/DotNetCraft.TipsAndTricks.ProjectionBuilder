name: Auto tag
on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Create Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Tag
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ "$BRANCH_NAME" == "main" ]]; then
            VERSION="1.0.0"
          else
            VERSION="1.0.0-prerelease"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Bump version and push tag   
        id: tag_version
        uses: anothrNick/github-tag-action@1.67.0
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            WITH_V: true
            DEFAULT_BUMP: patch
            RELEASE_BRANCHES: main,master,release/*,hotfix/*
            PRE_RELEASE_BRANCHES: feature/*          
          
      - name: Set tag name3
        run: |
            TAG_NAME=$(echo ${{ steps.tag_version.outputs.new_tag }} | sed 's/v//')
            if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.ref }}" == "refs/heads/master" ]]; then
                echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
            elif [[ "${{ github.ref }}" == refs/heads/hotfix/* ]]; then
                echo "TAG_NAME=${TAG_NAME}-hotfix" >> $GITHUB_ENV
            elif [[ "${{ github.ref }}" == refs/heads/feature/* ]]; then
                echo "TAG_NAME=${TAG_NAME}-alpha" >> $GITHUB_ENV
            elif [[ "${{ github.ref }}" == refs/heads/develop/* ]]; then
                echo "TAG_NAME=${TAG_NAME}-beta" >> $GITHUB_ENV
            elif [[ "${{ github.ref }}" == refs/heads/release/* ]]; then
                echo "TAG_NAME=${TAG_NAME}-release" >> $GITHUB_ENV
            fi          
          
      - name: Push Git Tag 2
        run: |
            git config user.name "GitHub Actions"
            git config user.email "github-actions@users.noreply.github.com"
            git tag $TAG_NAME
            git push origin $TAG_NAME
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: 8.0.x                  
      - name: Restore dependencies
        run: dotnet restore        
      - name: Build
        run: dotnet build --no-restore      
      - name: Test
        run: dotnet test --no-build --verbosity normal
        
      - name: Pack
        run: dotnet pack src/DotNetCraft.TipsAndTricks.ProjectionBuilder.Implementation/DotNetCraft.TipsAndTricks.ProjectionBuilder.Implementation.csproj --configuration Release --no-build --output out /p:PackageVersion=${{ github.ref }}

      - name: Push
        run: dotnet nuget push out/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json